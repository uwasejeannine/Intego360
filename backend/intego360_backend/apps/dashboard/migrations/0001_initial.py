# Generated by Django 5.2.1 on 2025-06-03 20:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('snapshot_data', models.JSONField(default=dict, help_text='Dashboard state at snapshot time')),
                ('widgets_data', models.JSONField(default=dict, help_text='Widget data at snapshot time')),
                ('parameters', models.JSONField(default=dict, help_text='Parameters used for snapshot')),
                ('snapshot_date', models.DateTimeField()),
                ('data_period_start', models.DateField()),
                ('data_period_end', models.DateField()),
                ('is_public', models.BooleanField(default=False)),
                ('shared_with_roles', models.JSONField(default=list)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_format', models.CharField(choices=[('json', 'JSON'), ('pdf', 'PDF'), ('png', 'PNG'), ('html', 'HTML')], default='json', max_length=10)),
                ('file_size_mb', models.FloatField(default=0.0)),
                ('view_count', models.IntegerField(default=0)),
                ('download_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('shared_with_users', models.ManyToManyField(blank=True, related_name='shared_snapshots', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_snapshots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dashboard Snapshot',
                'verbose_name_plural': 'Dashboard Snapshots',
                'ordering': ['-snapshot_date'],
            },
        ),
        migrations.CreateModel(
            name='DashboardUsageAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=50)),
                ('device_type', models.CharField(choices=[('desktop', 'Desktop'), ('tablet', 'Tablet'), ('mobile', 'Mobile')], max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('login_time', models.DateTimeField()),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('total_session_duration_minutes', models.IntegerField(default=0)),
                ('pages_visited', models.JSONField(default=list, help_text='List of pages visited')),
                ('page_view_count', models.IntegerField(default=0)),
                ('most_viewed_section', models.CharField(blank=True, max_length=30)),
                ('widgets_interacted', models.JSONField(default=list, help_text='Widgets user interacted with')),
                ('widget_interaction_count', models.IntegerField(default=0)),
                ('actions_performed', models.JSONField(default=list, help_text='Actions performed during session')),
                ('reports_generated', models.IntegerField(default=0)),
                ('data_exports', models.IntegerField(default=0)),
                ('average_page_load_time_ms', models.FloatField(default=0.0)),
                ('bounce_rate', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_usage', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dashboard Usage Analytics',
                'verbose_name_plural': 'Dashboard Usage Analytics',
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('widget_type', models.CharField(choices=[('metric_card', 'Metric Card'), ('chart_line', 'Line Chart'), ('chart_bar', 'Bar Chart'), ('chart_pie', 'Pie Chart'), ('chart_area', 'Area Chart'), ('table', 'Data Table'), ('alert_list', 'Alert List'), ('progress_bar', 'Progress Bar'), ('map', 'Geographic Map'), ('calendar', 'Calendar'), ('news_feed', 'News Feed'), ('weather', 'Weather Widget')], max_length=20)),
                ('data_source', models.CharField(choices=[('agriculture', 'Agriculture Data'), ('health', 'Health Data'), ('education', 'Education Data'), ('analytics', 'Analytics Data'), ('alerts', 'Alerts Data'), ('custom', 'Custom Data'), ('external', 'External API')], max_length=20)),
                ('data_endpoint', models.CharField(help_text='API endpoint or data source', max_length=200)),
                ('data_parameters', models.JSONField(default=dict, help_text='Parameters for data fetching')),
                ('refresh_interval_minutes', models.IntegerField(default=15)),
                ('chart_config', models.JSONField(default=dict, help_text='Chart-specific configuration')),
                ('styling_config', models.JSONField(default=dict, help_text='CSS and styling configuration')),
                ('size_config', models.JSONField(default=dict, help_text='Widget size and dimensions')),
                ('is_public', models.BooleanField(default=True)),
                ('allowed_roles', models.JSONField(default=list, help_text='Roles that can view this widget')),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('average_load_time_ms', models.FloatField(default=0.0)),
                ('usage_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_widgets', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgets',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserDashboardPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_view', models.CharField(choices=[('overview', 'Overview'), ('agriculture', 'Agriculture'), ('health', 'Health'), ('education', 'Education'), ('analytics', 'Analytics'), ('custom', 'Custom')], default='overview', max_length=20)),
                ('widget_layout', models.JSONField(default=dict, help_text='Widget positions and sizes')),
                ('widget_order', models.JSONField(default=list, help_text='Widget display order')),
                ('theme', models.CharField(choices=[('light', 'Light Theme'), ('dark', 'Dark Theme'), ('auto', 'Auto (System)')], default='light', max_length=10)),
                ('density', models.CharField(choices=[('compact', 'Compact'), ('comfortable', 'Comfortable'), ('spacious', 'Spacious')], default='comfortable', max_length=15)),
                ('auto_refresh_enabled', models.BooleanField(default=True)),
                ('refresh_interval_minutes', models.IntegerField(default=5)),
                ('show_notifications', models.BooleanField(default=True)),
                ('notification_position', models.CharField(choices=[('top-right', 'Top Right'), ('top-left', 'Top Left'), ('bottom-right', 'Bottom Right'), ('bottom-left', 'Bottom Left')], default='top-right', max_length=15)),
                ('sidebar_collapsed', models.BooleanField(default=False)),
                ('show_breadcrumbs', models.BooleanField(default=True)),
                ('show_quick_actions', models.BooleanField(default=True)),
                ('default_date_range_days', models.IntegerField(default=30)),
                ('preferred_chart_type', models.CharField(default='line', max_length=20)),
                ('show_data_tables', models.BooleanField(default=True)),
                ('enable_animations', models.BooleanField(default=True)),
                ('reduce_motion', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('enabled_widgets', models.ManyToManyField(related_name='enabled_by_users', to='dashboard.dashboardwidget')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Dashboard Preference',
                'verbose_name_plural': 'User Dashboard Preferences',
            },
        ),
    ]
