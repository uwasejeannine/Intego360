# Generated by Django 5.2.1 on 2025-06-03 20:49

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('icd_code', models.CharField(blank=True, help_text='ICD-10 code', max_length=20)),
                ('category', models.CharField(choices=[('infectious', 'Infectious and Parasitic'), ('neoplasms', 'Neoplasms'), ('blood', 'Blood and Immune System'), ('endocrine', 'Endocrine and Metabolic'), ('mental', 'Mental and Behavioral'), ('nervous', 'Nervous System'), ('circulatory', 'Circulatory System'), ('respiratory', 'Respiratory System'), ('digestive', 'Digestive System'), ('genitourinary', 'Genitourinary System'), ('pregnancy', 'Pregnancy and Childbirth'), ('skin', 'Skin and Subcutaneous'), ('musculoskeletal', 'Musculoskeletal System'), ('congenital', 'Congenital Malformations'), ('injury', 'Injury and Poisoning')], max_length=50)),
                ('is_notifiable', models.BooleanField(default=False, help_text='Requires immediate reporting')),
                ('is_epidemic_prone', models.BooleanField(default=False)),
                ('prevention_measures', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Disease',
                'verbose_name_plural': 'Diseases',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HealthFacilityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('level', models.IntegerField(help_text='1=Health Post, 2=Health Center, 3=District Hospital, 4=Referral Hospital')),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Health Facility Type',
                'verbose_name_plural': 'Health Facility Types',
                'ordering': ['level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HealthIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('category', models.CharField(choices=[('maternal', 'Maternal Health'), ('child', 'Child Health'), ('infectious', 'Infectious Diseases'), ('non_communicable', 'Non-Communicable Diseases'), ('nutrition', 'Nutrition'), ('immunization', 'Immunization'), ('family_planning', 'Family Planning'), ('mental_health', 'Mental Health')], max_length=50)),
                ('description', models.TextField()),
                ('unit_of_measurement', models.CharField(max_length=50)),
                ('target_value', models.FloatField(help_text='Target value for this indicator')),
                ('direction', models.CharField(choices=[('increase', 'Higher is Better'), ('decrease', 'Lower is Better')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Health Indicator',
                'verbose_name_plural': 'Health Indicators',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HealthFacility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('cell', models.CharField(max_length=50)),
                ('village', models.CharField(max_length=50)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('bed_capacity', models.IntegerField(default=0)),
                ('current_occupancy', models.IntegerField(default=0)),
                ('doctors_count', models.IntegerField(default=0)),
                ('nurses_count', models.IntegerField(default=0)),
                ('midwives_count', models.IntegerField(default=0)),
                ('other_staff_count', models.IntegerField(default=0)),
                ('emergency_services', models.BooleanField(default=False)),
                ('maternity_services', models.BooleanField(default=False)),
                ('laboratory_services', models.BooleanField(default=False)),
                ('pharmacy_services', models.BooleanField(default=False)),
                ('radiology_services', models.BooleanField(default=False)),
                ('surgery_services', models.BooleanField(default=False)),
                ('has_electricity', models.BooleanField(default=False)),
                ('has_generator', models.BooleanField(default=False)),
                ('has_water', models.BooleanField(default=False)),
                ('has_internet', models.BooleanField(default=False)),
                ('has_ambulance', models.BooleanField(default=False)),
                ('is_operational', models.BooleanField(default=True)),
                ('accreditation_status', models.CharField(choices=[('pending', 'Pending'), ('accredited', 'Accredited'), ('conditional', 'Conditional'), ('suspended', 'Suspended')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_facilities', to='authentication.district')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_facilities', to='authentication.sector')),
                ('facility_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='facilities', to='health.healthfacilitytype')),
            ],
            options={
                'verbose_name': 'Health Facility',
                'verbose_name_plural': 'Health Facilities',
                'ordering': ['district__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='HealthAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('alert_type', models.CharField(choices=[('outbreak', 'Disease Outbreak'), ('shortage', 'Medicine/Supply Shortage'), ('equipment', 'Equipment Failure'), ('staffing', 'Staffing Issue'), ('infrastructure', 'Infrastructure Problem'), ('quality', 'Quality of Care Issue'), ('emergency', 'Emergency Situation')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('recommended_actions', models.TextField()),
                ('response_contact', models.CharField(max_length=100)),
                ('contact_phone', models.CharField(max_length=15)),
                ('people_affected', models.IntegerField(default=0)),
                ('facilities_affected', models.IntegerField(default=0)),
                ('response_actions_taken', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('affected_diseases', models.ManyToManyField(blank=True, related_name='alerts', to='health.disease')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_health_alerts', to='authentication.user')),
                ('districts', models.ManyToManyField(related_name='health_alerts', to='authentication.district')),
                ('facilities', models.ManyToManyField(blank=True, related_name='health_alerts', to='health.healthfacility')),
            ],
            options={
                'verbose_name': 'Health Alert',
                'verbose_name_plural': 'Health Alerts',
                'ordering': ['-created_at', '-severity'],
            },
        ),
        migrations.CreateModel(
            name='DiseaseCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_group', models.CharField(choices=[('0-1', 'Under 1 year'), ('1-4', '1-4 years'), ('5-14', '5-14 years'), ('15-49', '15-49 years'), ('50-64', '50-64 years'), ('65+', '65+ years')], max_length=20)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('case_date', models.DateField()),
                ('case_type', models.CharField(choices=[('suspected', 'Suspected'), ('probable', 'Probable'), ('confirmed', 'Confirmed')], max_length=20)),
                ('outcome', models.CharField(choices=[('alive', 'Alive'), ('dead', 'Dead'), ('unknown', 'Unknown')], default='alive', max_length=20)),
                ('is_outbreak_related', models.BooleanField(default=False)),
                ('outbreak_id', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='health.disease')),
                ('patient_residence_sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disease_cases', to='authentication.sector')),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reported_disease_cases', to='authentication.user')),
                ('facility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disease_cases', to='health.healthfacility')),
            ],
            options={
                'verbose_name': 'Disease Case',
                'verbose_name_plural': 'Disease Cases',
                'ordering': ['-case_date'],
            },
        ),
        migrations.CreateModel(
            name='VaccinationCampaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('vaccine_type', models.CharField(max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('target_population', models.IntegerField()),
                ('target_age_groups', models.CharField(max_length=200)),
                ('doses_administered', models.IntegerField(default=0)),
                ('people_vaccinated', models.IntegerField(default=0)),
                ('adverse_events', models.IntegerField(default=0)),
                ('budget_allocated', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('budget_spent', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('suspended', 'Suspended')], default='planned', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_campaigns', to='authentication.user')),
                ('districts', models.ManyToManyField(related_name='vaccination_campaigns', to='authentication.district')),
                ('facilities', models.ManyToManyField(related_name='vaccination_campaigns', to='health.healthfacility')),
                ('target_disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vaccination_campaigns', to='health.disease')),
            ],
            options={
                'verbose_name': 'Vaccination Campaign',
                'verbose_name_plural': 'Vaccination Campaigns',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='HealthIndicatorData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('reporting_period', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('annual', 'Annual')], max_length=20)),
                ('year', models.IntegerField()),
                ('month', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)])),
                ('quarter', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(4)])),
                ('data_source', models.CharField(max_length=100)),
                ('is_verified', models.BooleanField(default=False)),
                ('comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_indicator_data', to='authentication.district')),
                ('facility', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indicator_data', to='health.healthfacility')),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_points', to='health.healthindicator')),
                ('recorded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='recorded_health_data', to='authentication.user')),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='health_indicator_data', to='authentication.sector')),
            ],
            options={
                'verbose_name': 'Health Indicator Data',
                'verbose_name_plural': 'Health Indicator Data',
                'ordering': ['-year', '-month', 'indicator__name'],
                'unique_together': {('indicator', 'district', 'facility', 'year', 'month', 'quarter')},
            },
        ),
    ]
