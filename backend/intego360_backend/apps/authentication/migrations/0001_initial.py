# Generated by Django 5.2.1 on 2025-06-03 20:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('province', models.CharField(max_length=50)),
                ('population', models.IntegerField(default=0)),
                ('area_km2', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=15, unique=True)),
                ('population', models.IntegerField(default=0)),
                ('area_km2', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='authentication.district')),
            ],
            options={
                'verbose_name': 'Sector',
                'verbose_name_plural': 'Sectors',
                'ordering': ['district__name', 'name'],
                'unique_together': {('district', 'name')},
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=15)),
                ('national_id', models.CharField(blank=True, max_length=16, null=True, unique=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('role', models.CharField(choices=[('admin', 'System Administrator'), ('mayor', 'District Mayor'), ('vice_mayor', 'Vice Mayor'), ('sector_coordinator', 'Sector Coordinator'), ('agriculture_officer', 'Agriculture Officer'), ('health_officer', 'Health Officer'), ('education_officer', 'Education Officer'), ('data_analyst', 'Data Analyst'), ('viewer', 'Read-only Viewer')], default='viewer', max_length=20)),
                ('department', models.CharField(blank=True, max_length=100)),
                ('employee_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('preferred_language', models.CharField(choices=[('en', 'English'), ('rw', 'Kinyarwanda'), ('fr', 'French')], default='en', max_length=2)),
                ('timezone', models.CharField(default='Africa/Kigali', max_length=50)),
                ('receive_email_notifications', models.BooleanField(default=True)),
                ('receive_sms_notifications', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='authentication.district')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='intego360_users', related_query_name='intego360_user', to='auth.group', verbose_name='groups')),
                ('sectors', models.ManyToManyField(blank=True, related_name='users', to='authentication.sector')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='intego360_users', related_query_name='intego360_user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('view_dashboard', 'View Dashboard'), ('view_agriculture', 'View Agriculture Data'), ('view_health', 'View Health Data'), ('view_education', 'View Education Data'), ('generate_report', 'Generate Report'), ('export_data', 'Export Data'), ('create_alert', 'Create Alert'), ('modify_alert', 'Modify Alert'), ('delete_alert', 'Delete Alert'), ('update_profile', 'Update Profile'), ('change_password', 'Change Password'), ('data_entry', 'Data Entry'), ('data_modification', 'Data Modification'), ('system_admin', 'System Administration')], max_length=20)),
                ('description', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('resource_type', models.CharField(blank=True, max_length=50)),
                ('resource_id', models.CharField(blank=True, max_length=50)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentication.district')),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentication.sector')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to='authentication.user')),
            ],
            options={
                'verbose_name': 'Activity Log',
                'verbose_name_plural': 'Activity Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('work_phone', models.CharField(blank=True, max_length=15)),
                ('personal_phone', models.CharField(blank=True, max_length=15)),
                ('work_email', models.EmailField(blank=True, max_length=254)),
                ('office_address', models.TextField(blank=True)),
                ('emergency_contact_name', models.CharField(blank=True, max_length=100)),
                ('emergency_contact_phone', models.CharField(blank=True, max_length=15)),
                ('emergency_contact_relationship', models.CharField(blank=True, max_length=50)),
                ('education_background', models.TextField(blank=True)),
                ('work_experience', models.TextField(blank=True)),
                ('skills', models.TextField(blank=True, help_text='Comma-separated list of skills')),
                ('certifications', models.TextField(blank=True)),
                ('total_logins', models.IntegerField(default=0)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('dashboard_views', models.IntegerField(default=0)),
                ('reports_generated', models.IntegerField(default=0)),
                ('alert_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('hourly', 'Hourly Digest'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Digest')], default='immediate', max_length=20)),
                ('linkedin_profile', models.URLField(blank=True)),
                ('twitter_handle', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to='authentication.user')),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('security_score', models.IntegerField(default=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='authentication.user')),
            ],
            options={
                'verbose_name': 'User Session',
                'verbose_name_plural': 'User Sessions',
                'ordering': ['-login_time'],
            },
        ),
    ]
